vendors = webkit moz ms

em(px, base = $root-font-size)
    unit((px/base), 'em')

calc()
    if current-property
        for prefix in vendors
            arguments = unquote(arguments)
            add-property(current-property[0], s('-%s-calc(%s)', prefix, arguments))
        s('calc(%s)', arguments)
    else
        error('calc() must be used within a property')

font-mixin(font-family, weight, size = null, base = null, lineheight = null, style = null)
    unless base
        base = $root-font-size

    if style && size && lineheight
        if lineheight
            font style weight em(size, base) \/ em(lineheight, size) font-family

        else
            font style weight em(size, base) font-family

    else if size && lineheight
        font weight em(size, base) \/ em(lineheight, size) font-family

    else
        if size && !lineheight
            if style
                font style weight em(size, base) font-family
            else
                font weight em(size, base) font-family

        else
            font-family font-family
            font-weight weight

            if style
                font-style style

// background transparency
background-transparency(color, alpha = 1)
    ms-color = argb(color, alpha)
    background rgb(color)
    background rgba(color, alpha)
    .lt-ie9 &
        background transparent
        filter s('progid:DXImageTransform.Microsoft.gradient(startColorstr=%s,endColorstr=%s)', ms-color, ms-color)
        &:nth-child(n)
            filter none

hex(decimal)
    hex-value = ('0') ('1') ('2') ('3') ('4') ('5') ('6') ('7') ('8') ('9') ('A') ('B') ('C') ('D') ('E') ('F')
    unquote(hex-value[floor(decimal / 16)] + hex-value[floor(decimal % 16)])

argb(color, alpha = 1)
    unquote('#') + hex(alpha * 255) + hex(red(color)) + hex(green(color)) + hex(blue(color))

/*
 * Accepts a background-color and if it's dark sets the color to the light color & vice versa
 */
colorCond(color, lightColor = $white, darkColor = $blue-3)
    if dark(color)
        color lightColor
    else
        color darkColor